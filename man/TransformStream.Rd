% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TransformStream.R
\name{TransformStream}
\alias{TransformStream}
\title{Transform Stream}
\description{
An entangled pair of readable and writeable streams, wherein writing to the
stream causes a transform function that can enqueue chunks to the readable
side.
}
\details{
Events:
\itemize{
\item start
\item error
\item data
\item drain
\item backpressure
\item pipe
\item tee
\item close
}
}
\examples{
# All the functional streams are implemented using
# the transform stream class
# For instance, `streams::map_stream`:

map_stream <- function(fn, ...) {
    fn <- to_function(fn)
    TransformStream$new(
        transform = function(chunk, controller) {
            res <- fn(chunk)
            controller$enqueue(res)
        },
        ...
    )
}

# Or `streams::filter_stream`

filter_stream <- function(fn, ...) {
    fn <- to_function(fn)
    TransformStream$new(
        transform = function(chunk, controller) {
            res <- isTRUE(fn(chunk))
            if (res) {
                controller$enqueue(chunk)
            }
        },
        ...
    )
}

}
\seealso{
Other streams: 
\code{\link{ReadableStream}},
\code{\link{WriteableStream}}
}
\concept{streams}
\section{Super class}{
\code{\link[streams:EventEmitter]{streams::EventEmitter}} -> \code{TransformStream}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{desired_size}}{1}

\item{\code{current_state}}{1}

\item{\code{readable}}{1}

\item{\code{writeable}}{1}

\item{\code{controller}}{1}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TransformStream-new}{\code{TransformStream$new()}}
\item \href{#method-TransformStream-close}{\code{TransformStream$close()}}
\item \href{#method-TransformStream-abort}{\code{TransformStream$abort()}}
\item \href{#method-TransformStream-write}{\code{TransformStream$write()}}
\item \href{#method-TransformStream-pipe}{\code{TransformStream$pipe()}}
\item \href{#method-TransformStream-tee}{\code{TransformStream$tee()}}
\item \href{#method-TransformStream-print}{\code{TransformStream$print()}}
\item \href{#method-TransformStream-format}{\code{TransformStream$format()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="streams" data-topic="EventEmitter" data-id="emit"><a href='../../streams/html/EventEmitter.html#method-EventEmitter-emit'><code>streams::EventEmitter$emit()</code></a></li>
<li><span class="pkg-link" data-pkg="streams" data-topic="EventEmitter" data-id="event_names"><a href='../../streams/html/EventEmitter.html#method-EventEmitter-event_names'><code>streams::EventEmitter$event_names()</code></a></li>
<li><span class="pkg-link" data-pkg="streams" data-topic="EventEmitter" data-id="get_max_listeners"><a href='../../streams/html/EventEmitter.html#method-EventEmitter-get_max_listeners'><code>streams::EventEmitter$get_max_listeners()</code></a></li>
<li><span class="pkg-link" data-pkg="streams" data-topic="EventEmitter" data-id="listener_count"><a href='../../streams/html/EventEmitter.html#method-EventEmitter-listener_count'><code>streams::EventEmitter$listener_count()</code></a></li>
<li><span class="pkg-link" data-pkg="streams" data-topic="EventEmitter" data-id="off"><a href='../../streams/html/EventEmitter.html#method-EventEmitter-off'><code>streams::EventEmitter$off()</code></a></li>
<li><span class="pkg-link" data-pkg="streams" data-topic="EventEmitter" data-id="on"><a href='../../streams/html/EventEmitter.html#method-EventEmitter-on'><code>streams::EventEmitter$on()</code></a></li>
<li><span class="pkg-link" data-pkg="streams" data-topic="EventEmitter" data-id="once"><a href='../../streams/html/EventEmitter.html#method-EventEmitter-once'><code>streams::EventEmitter$once()</code></a></li>
<li><span class="pkg-link" data-pkg="streams" data-topic="EventEmitter" data-id="prepend_listener"><a href='../../streams/html/EventEmitter.html#method-EventEmitter-prepend_listener'><code>streams::EventEmitter$prepend_listener()</code></a></li>
<li><span class="pkg-link" data-pkg="streams" data-topic="EventEmitter" data-id="prepend_once_listener"><a href='../../streams/html/EventEmitter.html#method-EventEmitter-prepend_once_listener'><code>streams::EventEmitter$prepend_once_listener()</code></a></li>
<li><span class="pkg-link" data-pkg="streams" data-topic="EventEmitter" data-id="raw_listeners"><a href='../../streams/html/EventEmitter.html#method-EventEmitter-raw_listeners'><code>streams::EventEmitter$raw_listeners()</code></a></li>
<li><span class="pkg-link" data-pkg="streams" data-topic="EventEmitter" data-id="remove_all_listeners"><a href='../../streams/html/EventEmitter.html#method-EventEmitter-remove_all_listeners'><code>streams::EventEmitter$remove_all_listeners()</code></a></li>
<li><span class="pkg-link" data-pkg="streams" data-topic="EventEmitter" data-id="set_max_listeners"><a href='../../streams/html/EventEmitter.html#method-EventEmitter-set_max_listeners'><code>streams::EventEmitter$set_max_listeners()</code></a></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransformStream-new"></a>}}
\if{latex}{\out{\hypertarget{method-TransformStream-new}{}}}
\subsection{Method \code{new()}}{
1
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransformStream$new(
  start = NULL,
  transform = NULL,
  flush = NULL,
  writeable_strategy = NULL,
  readable_strategy = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{start}}{1}

\item{\code{transform}}{1}

\item{\code{flush}}{1}

\item{\code{writeable_strategy}}{1}

\item{\code{readable_strategy}}{1}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransformStream-close"></a>}}
\if{latex}{\out{\hypertarget{method-TransformStream-close}{}}}
\subsection{Method \code{close()}}{
1
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransformStream$close()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransformStream-abort"></a>}}
\if{latex}{\out{\hypertarget{method-TransformStream-abort}{}}}
\subsection{Method \code{abort()}}{
1
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransformStream$abort()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransformStream-write"></a>}}
\if{latex}{\out{\hypertarget{method-TransformStream-write}{}}}
\subsection{Method \code{write()}}{
1
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransformStream$write(chunk)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{chunk}}{1}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransformStream-pipe"></a>}}
\if{latex}{\out{\hypertarget{method-TransformStream-pipe}{}}}
\subsection{Method \code{pipe()}}{
1
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransformStream$pipe(destination)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{destination}}{1}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransformStream-tee"></a>}}
\if{latex}{\out{\hypertarget{method-TransformStream-tee}{}}}
\subsection{Method \code{tee()}}{
1
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransformStream$tee()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransformStream-print"></a>}}
\if{latex}{\out{\hypertarget{method-TransformStream-print}{}}}
\subsection{Method \code{print()}}{
1
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransformStream$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TransformStream-format"></a>}}
\if{latex}{\out{\hypertarget{method-TransformStream-format}{}}}
\subsection{Method \code{format()}}{
1
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TransformStream$format(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{1}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL
}
}
}
